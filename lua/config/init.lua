-- https://github.com/LazyVim/LazyVim/blob/main/lua/lazyvim/config/init.lua

local M = {
  excluded_filetypes = {
    "",
    "NvimTree",
    "Outline",
    "TelescopePrompt",
    "TelescopeResults",
    "Trouble",
    "aerial",
    "alpha",
    "checkhealth",
    "dashboard",
    "gitcommit",
    "help",
    "lazy",
    "lspinfo",
    "man",
    "mason",
    "neo-tree",
    "notify",
  },

  -- close some filetypes with <q>
  close_with_q = {
    "PlenaryTestPopup",
    "checkhealth",
    "help",
    "hierarchy-tree-go",
    "httpResult",
    "lspinfo",
    "man",
    "neotest-output",
    "neotest-output-panel",
    "neotest-summary",
    "notify",
    "oil",
    "qf",
    "query", -- :InspectTree
    "spectre_panel",
    "startuptime",
    "tsplayground",
  },

  -- icons used by other plugins
  icons = {
    general = {
      lsp = "",
      dap = "",
      treesitter = "",
    },
    -- https://microsoft.github.io/vscode-codicons/dist/codicon.html
    dap = {
      Stopped = { "", "DiagnosticWarn", "DapStoppedLine" },
      Breakpoint = " ",
      BreakpointCondition = "",
      BreakpointRejected = { "", "DiagnosticError" },
      LogPoint = "",
    },
    diagnostics = {
      Error = " ",
      Warn = " ",
      Hint = " ",
      Info = " ",
    },
    git = {
      added = " ",
      modified = " ",
      removed = " ",
    },
    kinds = {
      Array = " ",
      Boolean = " ",
      Class = " ",
      Color = " ",
      Constant = " ",
      Constructor = " ",
      Copilot = " ",
      Enum = " ",
      EnumMember = " ",
      Event = " ",
      Field = " ",
      File = " ",
      Folder = " ",
      Function = " ",
      Interface = " ",
      Key = " ",
      Keyword = " ",
      Method = " ",
      Module = " ",
      Namespace = " ",
      Null = " ",
      Number = " ",
      Object = " ",
      Operator = " ",
      Package = " ",
      Property = " ",
      Reference = " ",
      Snippet = " ",
      String = " ",
      Struct = " ",
      Text = " ",
      TypeParameter = " ",
      Unit = " ",
      Value = " ",
      Variable = " ",
    },
  },
}

return M
